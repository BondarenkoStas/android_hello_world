workflows:
    default:
      name: Default
      instance_type: mac_mini
      max_build_duration: 60
      environment:
        vars:
          CM_KEYSTORE: Encrypted(Z0FBQUFBQmZFV1hTSmRwdnZCaE1YbUN2NEs5aklENldFWkJUVnJyeTJPZ1U5TGZqdmc0N3ZYSzdkN0R4UTBoN0pZd3RrSlU0SzJqRmt3V1hLcExheFRMMFhuX0RjTXhBeEZaMDNzUVlra3MtOUp0SGxHQlNBZU1WU1hCX1ltV1lkeEpBMEdZYVA2d1FUMFVMeXhiakEzM0dkNDlIZjZ0Z0wwcUVROEYtYWg0blVibUhrZF9PRm00WHN1aUxFTlBHejJ6UlQ1eVRXS1RuaFluMFRad2xIcFcyeGxRdXRXSE02OG9UcENZdENUamxhVm5CN3haUmFHeUV0dXExcERJY3hFUUJ0TGQzazJSX3duQTVGZ2VRbERCU0dYdHZkY1RkQV9ES1NTa3pKTzliUTQtS2R4NXZTYTdSYllOc2tnb0IxZWgzZGI4aWY3RkhqWFBTa3RoVmFhbEloXzVsUVByZmd3U2E2SG1VbUk4UldRem8wZTFNdzhsdG54cXpiTF85UnE1Mkhpek1yV0xaZ0lhd3JUNFN0dEdQc01DeHFoeXQtUjB5NDdEYTNVWDlFRjRaRzdRWFNBT0RpZUxRMDJMUkxQeVdPZjl3VEMyZzFvOFNtTXNpQlFRd3RIN0prV0VlZC1NU2lJOTRuZFhnel9FVTBCaGtIVFd1bnV4RXJoNFFlNWN6eFFnWUx6R2lRR1lENEhJVy01MkgwdE41Tnl1ak13dXkzc29OR1cwNE9KRmhuRm9VUi1aZlc5SVh1dEVFNVE0M0ZCYzBmNlo0VXZpN09nc2Y4SzhQdm9LeGdRbkJUWmpyYnF0czlpcDlGejBUSGVockFBY0labFU5Rk95OFZzdU9iNVoyR1owS29neURMLWN5UDNsZmRzcm9seUlOVG43Z2ZKdFlJN3VpMWhKMVpVUGNOR1JmS1dZai0xSVEzSkRfNjZ6TTRaRzZjcU9MLVZSSlJHdjRrV2dMZ3N0VHdxdHMxb2dfNmJEM3NFUkJMT2lkcjVpYzdNZEJZX3pCR2wxVmZWMjlMOTFnOGlLRlBSOHk5WldSSXNTNmFiaW9lMVBUQ0JiUVFCUlUzZHNfZmt3RzhLb1J4eDNzdGs4Nk9aVUo2d3F2SmczQUFiMXZudVJiV09zX1J2dXF2T0R4dm5hdzR3TzVDQlU4WXZmZ1NaN09takR1ZmhpS1FvWkRZN29GQUpyY0t4LVVaODY2M0FzeUZIWGF0VjhqUmZCM1l5MEJqZjBkeTYwT0pkWEpsQU52ajNuX01COW1WTkJWc0lRYUE3SnNNSU5MTlRjcFJfTEpCMTI0am9EN2VqNkZ3alBkQlVYbTFNOU5VZmNkeXVLV01LWExpdUNSMlhScmo3bFlZUVhYamU1ejctcE1sSTBoVmdGbTU5RnBxaFVkQzVROUcyS0RkaE1xX01tSVdSVTVWUDR0a0NhaTMtbXMwVDI4MHlxVWhsNEpjN0d1ZzdlV0l2V3k0ZlBJaDEwb2x4dm4tWWcxRG92bDRrMjdIemNlbmJqNkRuSlRxLWxpS21fWjdEWmJ1cW9ma2NLZ01YTHB4X195LVF3X2ZlcGxuTUVMdlRGU1o5RG9hNWJNOElFc0o3cXp3REp5RDV0UGwwVFlUeTItNUYyMFRtZmNjVmtBRi14c2hWNm5tSkhpckd6N3NINFVvQnJnR1RFaThDaXBrRWdvVlZJbHl5cHpvdEtNUjNkRjBQd0JNZ3Y2MjcyNkJXMENySnd1OVdLTDhabTl4T0w1d2czNjJDLTNUdENEeDBHR3NQTFlmSHR3RXB6cDFNWkcxak5pbV8waW9jQlN5ZXVmck5QejVRZHpwbC1zN1piMmpPS05iRkVrNU1yWWFQQS1UWXItdEYzdVJsWUF5cjdYenE2dmg1bzdkT1lhbXI3SkRhWVcySC03QVg4emk5ejlUTk9peVJMa1hHNDNUbW1iQlBjVlN3NjB0RlZnQ2VQeV95MkVlUzFUWHg3cm96S1V4d3c4eVFfcVc0LUpJWkJ5Y05iVWktbERaZU9PZGNaLUpkaGd0bGt6NmRTaHNGNDJBV3RidnZSbEpoT3ZGMDc5UjRzczNONTljTjc1WGh6NXNPNEpLMlJkblVTYXpvOHJDc3Nyd1IzT2dRWll2dDdvN3R1UV8wcFhtVmp2RjNGd19Kb21nTkN5SHVGQWZ3VFVwX1J4SWlEWU5KQ2VxSVBwc0lzbzZnSXItR3ZFVFJ6S2VtQ2FfT0pCV0plVW5aU09BRmlRdVdjcS1ma05SRlA2bmRkaUNRdGV4U1J3M1ZPTGhJNTJ3Nk1sWnJ4NE9BZGE1WFNwNWEzOFRhRl9kWGxDdTZNNE13RTZzaGZ6QWdPOWw3cEpnU0x3YURoQkVwUWVVcU4wREltTzBPQ25fbmhaN09ZRkNLOEpUSk9ERmsyZEdsdDBVVHZNZGhVeUkzbWlpS0N1RHhxMTA5c0ViS0xYYkdTeWk5LWJTdjE3ZFJDbGo1ZUdmMEstUlZFSDdFZDk2QjZDVUkyREVILTZOTEVPcWc2SWxjWEw4OUxqOVlzekpjQUIzWmN2VHczZFYtVWdVektmd0lTekFWNG1mZkktMFZPV3YxejR2ZkdJV2lsSW0wZzlrLVY3X1NtWHpuZDdNa21oVERfUmV3aXZOb1NtTExVd0xtSHJUVzVyYjdXdG1POU1JUlQ1QVYwcjdLQWxaMkpSTjB6dDVSZlRhdGdSTWVJM3hmMW5vejk2NXZKSklXalJZb01hdmJ4bDQteEFlYTlLblhhZDJmNWlBUDRYallrcmdINTBrQUx3SGlIQXFjUElfU0RFMTNyTkFXeDE3UTdyeG1PLTVYVGJLNXlXY3BudmlvOGdxVzBQQUdSNUNlU2trY25mR3R0VW5SNHZkOXVtbW04MUZwRDdXNEtYMGJmd3prNm9tdUxvbl9ZNTZJS3JEZ0xhczJTWnFkQVBzYTFwaVNEcElTMDdGRXVxSkpNemN5anNhRnl5QUpmb2swckFHaVozbWdLc3BaVjVUZnUzTHNhQUVzcElMQUlGUXVrd0ttaVFncndCN0FPVFlJN2JYZzR3emF2SXZnb3VMaDdVLWVQOVNvbHg4RWEzZWhpY29PTGRvNE16UW1qNWJGbms0TDZmOE8wQnEwMFpGUUpoMWM1QW4wblVCT2ozR3lPeWFpMTFZa1p3Qk5xM24tcnBud19vS0FZTTdPUjNaZnlkeHZwZ2VNanpNa2tHdnF6ZTFheFlKUEZFZXdXSVY3eVZKc1k4cmt4NjlfbGU1YzRReVRwUXJaQmFYZ2pyX19wUmpyWnNYZjlUX2p0TnFVUHBScVZIdXhyT0NJWU1VclZIRmxfTm0tMTRmaGR1V0dwVW52V1h5endQR0djSmJnT0NuZkU2eWx4ZDBnMmJNZXYtZ3ROdWFHckktWl80bjZ0N0drZGdobmRkX2pMUWw5SnFkbkgyalZ5N0daRHhZbWMzLXg0UV9kSjFxR0VIMzZ0TE9mTDMybjRsR1F6cVBmTHZXZFhCTGc5LUlreGxRYXpRZTRfdjhsXzYwd1pwMzhrcUM0dVc5ZGQwdFFmbHRUTTBwYkg4dHNPV2dSS1laVkFCQ2hkTkQ5VE9lT1F6N0tGS215YjVkOVBja2RSeG1WbWQ2YVVzOHl1c2plWlVuM1M5X1FEd1p5MDJoYThzSEdfajQxejZyRWNuM2t6WjdzNEs5TnVTX0RhMHliTi1rTnpEd3dwSnMyM0d0Um9nV2JKQXU2bV8tN0U0d284UTA4Uk1QaU5pS3dnUldrYTZreWVOMHkyS2VaQmE1QTFzTTlBNDVOWVZYM05TcmM1WUNRYlF2TnRzQkwydEhaWlgzMEZPZEJCQ3pNVy1BdW5qTzhZZV81aDFHTWR2ZGs4S29RNmxCNVhkY3JQVm1qTjJzUGhHRnpkZFdycHU2ZXlzNk5DNzRCM1REemh6b3haenUtS2V3LVNTcTUxQUJGX2xYN2QyaFY1bzV5TTJqQW9SYzlWaWE1Vk5IbzFYa0tiSkI2eDhweWhLSTRzeHN2WWJaTGx4V2poVm5EZzNiQUJKZE02WVFqaF95YUZjSGozaGNCTDIxUlNuWGJqbVkwV25XLWVxV0h4em1YY1pvcC1TMDFYODhhV0xub2NhNzlXM2t4bXNjX2JoMUI1dHk0NkpodGlCTzJnWlY4bVVxeUExVmJoSDFyOG0wLWlQWFpwbHNuOTZZSGNJQ2FCLXkxVnFueE90SHRoLUEwaVhRRGlkeFlsMnZXYWR0LWZFb1JnZW8xNkUxNURIR2JqUE53NDJQanFMaFl2dVdkMzhMelNEcV9YbUQyNno3N2U3VXM4ZUxzMTU0blYxM0xCeUFIcWI0THJjSjdrbHowYnRBZU15bnNraklySTFuejdhYXhkWUxuUFluTVpNX2JRNnZ2c3dBeEVKUTRac21HS0xLMUtYQ3JacnpqZXFGaWpQa2V3TzUtZy1kRE1Da2E1eWNBQUFza2dWQk5YTGVKR3lCUm9DUHBnTVhBV2I3UHNUX2djUUlpVzdTNE51bnRvZ2VyNmRfcHBLTzlfR2Jza3haQjE2RG1LaHZxRXo0c2FaN283bnJjdXpkTHhqZnM1R2Z4NzFXSWlqOHlzV1VzOVJuN2MyWWxSMXBteU40R1dRUjRydFk4UTJkRTRENVJ5R2xTVnk1TXYzd3Eycm9sczFtUnpfTVJtcEc3ZE1GTkI3UGNHS1RtdEt6aVExbWNCWGJzeTBuem1QZXZHbjZ5YU85WHJVRHNmWVpKaF9ueGc1dUUxR01xWjJBY3g4T2IxdGwtR3JxMHRoZTJKdUtKUUJQMWg2aWl2QndGSGFpRk5DVnZyUGtQd0RzcG5YbE1GSENQZ21PbXowSUlHc1kyU2tBdmdkME4yY3gtRVJxa1lkWXRjaFMxRC11NXk4OEhQUjQxcE50Vm5xVTdjYmlVWE5XSzMtZEtFUGM0WGtQRXo1WE5IMV9vYkJwRTExTW4yM2tPd0lrRERVemlYRUFXMEllZUV3UUUyTTBIcUlnYXRvUl8wZF9NMVJpdXFIYWpTRGFxWE1wTFpGRGNySURrSVU1TWJmcXQ0bm8zSVlWQnFXbWJuWVVrbVNCTXRBbER4QWU3NlN6MWhOUzl2NDFNX0VSOU5wNzRsSE9CeXpzcmp6MjhkZVZFMENMbEphNHdLdEdFd0tvM0xDX1Y4Q3k5VXRXLWlPcXVjMFpWVkFpSTN3bDhnYklMYXFyMmh4c21hSWhweElFUXVUR2tPTHpXV3NJaGNDMDdJMlpEbDVvTVFqd25FTkJYWjF4WldxMng4eFQ5Z3dmWGp1VGVEcW9nclNSUENvcXRkSExoY0tHdTZNdTdfRDVxTHlRSGNUR085N1VicmpBYUxPcHBJWTk3VXhOdE1uQmJvU2ctMmIwVVE4dzRIZXEtQVlsYzE3YUFGN1NoLUxuWnI1ZmJDZHdWTHRaTXppNFRoUEc3a2FtSENKOFZfelhHVkFOMV9Ia0E9PQ==)
          CM_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmZFV1lQbjVJZDVkMFFySEM1UjVWanJhNkRKdlFybUVjMFN1MXZ0a3I1VG5LRDI0OS1tZmFhcmI4a2Z5bEVyckVSUmpiOC1lYzRUekhJODl4dUttZFpySlRGYlE9PQ==)
          CM_KEY_ALIAS_PASSWORD: Encrypted(Z0FBQUFBQmZFV1lQbjVJZDVkMFFySEM1UjVWanJhNkRKdlFybUVjMFN1MXZ0a3I1VG5LRDI0OS1tZmFhcmI4a2Z5bEVyckVSUmpiOC1lYzRUekhJODl4dUttZFpySlRGYlE9PQ==)
          CM_KEY_ALIAS_USERNAME: Encrypted(Z0FBQUFBQmZFV1llemV5LUdSN2hUMWlteVU2b0tkNndXUG1ObWVXeWtVelVjdnJtUFdRWXljV3B2bU5BMXFTeHpiUEwyWHpnN1pORHNnZ1pWdUs1ZDhLSXE3dUZVejN2RUE9PQ==)
          FIREBASE_TOKEN: Encrypted(Z0FBQUFBQmZFWFB6dkk4MDJGdFM4U2JPbXo2d0VWaEJ5czg2UHY0ZEplN1V1N3RoX2dXNlFGS2dyZDNBS3prV3lOeUNPTmV4UHlCemU0Rmh3ZFhHNzAta3A4LTl3TDZIbjI2V2tVdW9NR2lEaE9namI2dzk3SzZOcG5leXRCZDlRS2xpTDdOc0QxalJWdTdnYjZGQS03NHo5ZVItWDJ1ZTJzSmxJSFI4N2VjTTBWc2ttTjhTeDJ4UHRhOEpJcktfSlFLN2pBd1lWM1c3aTlFQ0R2Q2czREh0ckdTbTVITTRTZz09)
          APP_CENTER_TOKEN: Encrypted(Z0FBQUFBQmZFWGxJQ29NbmFWVnNnZm9kRTlvUEJvc2pyNk5yRnMzWmZDS2dneUlSS3BXRHBwTUlEd05XY3FHRFJnVThFcElVWE5vZk9saEZrc1d3WE10TVhsN0RxVExXeW5TSl84WEM2YkJhUEJGMm5na0tXV292dUx3ZGFMZHRIY3pUWGdKV2pPT0E=)
      cache:
        cache_paths:
          - $HOME/.gradle/caches
      triggering:
        events:
          - push
        branch_patterns:
          - pattern: 'master'
            include: true
            source: true
        cancel_previous_builds: true
      scripts:
        - |
          # set up key.properties
          echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
          cat >> "$FCI_BUILD_DIR/key.properties" <<EOF
          storePassword=$CM_KEYSTORE_PASSWORD
          keyPassword=$CM_KEY_ALIAS_PASSWORD
          keyAlias=$CM_KEY_ALIAS_USERNAME
          storeFile=/tmp/keystore.keystore
          EOF
        - ./gradlew bundleRelease
        - |
          # generate universal apk from generated app bundle
          aabPath=$(find app/build -name "*.aab" | head -1)

          if [[ -z ${aabPath} ]]
          then
            echo "No aabs were found, skip universal apk generating"
          else
            echo "Found aab at $aabPath"
            android-app-bundle build-universal-apk \
              --bundle ${aabPath} \
              --ks /tmp/keystore.keystore \
              --ks-pass $CM_KEY_ALIAS_PASSWORD \
              --ks-key-alias $CM_KEY_ALIAS_USERNAME \
              --key-pass $CM_KEY_ALIAS_PASSWORD
          fi
        # - |
        #   # publish the app to Firebase App Distribution
        #   apkPath=$(find app/build -name "*.apk" | head -1)

        #   if [[ -z ${apkPath} ]]
        #   then
        #     echo "No apk were found, skip publishing to Firebase App Distribution"
        #     else
        #       echo "Publishing $apkPath to Firebase App Distribution"
        #       firebase appdistribution:distribute --app "1:717260803432:android:2fa26a4fec7583dd8b5add" --groups "testers" $apkPath
        #     fi
        #   fi
        - |
          # publish the app to Visual Studio App Center
          echo 'Installing App Center CLI tools'

          npm install -g appcenter-cli

          echo "Find build artifacts"
          apkPath=$(find app/build -name "*.apk" | head -1)

          if [[ -z ${apkPath} ]]
          then
            echo "No apks were found, skip publishing to App Center"
          else
            echo "Found apk at $apkPath"
            appcenter distribute release \
              --group Collaborators \
              --file $apkPath \
              --release-notes 'App submission via Codemagic' \
              --app "stasio/android example app" \
              --token $APP_CENTER_TOKEN \
              --quiet
          fi
      artifacts:
        - app/build/**/outputs/**/*.aab
        - app/build/**/*.apk
    #   publishing:
    #     google_play:
    #       credentials: Encrypted(Z0FBQUFBQmZFV19iT2FEeFZYS25VOVVWLUVsODNzWEJ5WTYyQWstYjdWeDNSZlctTU9wdWQySE91THpGY0FleG1zLWVRVlI5SEhRUC1lcXRJNWY1WGhFMkFfTlRHb04yUDh5T3hIMkFYMmtMVk9kNVNBWU1XTU5EaHdtTllHNEdOeFNDV3hXY3k2SHhnNXc1Tmg3c01ZYWZQT2dndV91ZGp6WlhQZ2lNdHA5VXEzQ0J5T19vU215UXAxYmN4QXd3Z09PMU5YOUl5bEczTG9PMnVCN1hHSHVYQmx1dGhNaXhYVnhjRGw2WUJKaHNxNklRUVFZY3I5eURfNEtUTW5SV2FFWUtPQlA4aTZoSHRDWUxyRmdzbmVfaVVmSWdNdkFuME5tNHJnNjBxSTZVWElYZWI3Q0ZDYnJGaEgzZFpqUEtiMXNTd3VUZVgyWlB1Ul9uMkFhZERsZGdPcjdfY1FrZ3AxalhSLThEaGlzX0Y4SE1Yc2ZSSGc2RWZBNUpqMkdlMDg5cm5xRjRBVkYwWmZWN05xYWJMOEhxbFYwdG1PUDBTNXQxbXc0Z3hjMGp6SWlqYXV0YThKNHJPMldrV1ZEbEptYk5RNWJ5WGlGX3BHT2ZKV0N1UFFRTFJnRmFZTUs5RzM0VHF5OWxKdU9sVy1EeXJRTEloYVJXak1FQ3FFZFp0Y3JMODFJWU9VaXVXWlo3dUJPeEgxVkNuY1NBN0FOaXlDOVBmeTF1TDVsUmZuTmtkdUV1YUx2WmlGNXU3N082T1NSek9xM3RRbDdpNnBTcTlGb3JTeFFxMUU4dF9IX2hESC1DWkFzOTJ0M2wwNXp1cl9DMWZkMVVPbnQ5T3dDX2tBY2ZZYXhpSTYyR2JCOHkzcjhRNDFYbUlOVTd1Y3RTQU9xRXd2UWhkSHRFendwUXVsWm15anNDSmhrSjN5bzg0NkRlMXZHeDl5bXVvQTNJT1NpZDFJZTFPY2hoaXdyanJHVUtkT201cXBkcUJNTGc5d2lIcFk4cWlPY0xHLVFRNDlVODBTSUhFVnlSX29qanpwbFhkTnNHT3U1Q0hTbVJUYjQ4ZG5SbG1QNXAzUERjaWJuSkkwb0NNaHBxZlJhOGdYdmswdzAwVHVSMkVRWGNkTFFpODNqMGFaQVNablU2eS1FY040LWVrMVFQSGdtX1lGTklrUVRoWWVid3RvV3RfS05UVk5RN2lDYTVrT2hRYzVIT2ppcnA4MXl2LUQyZWJmQWt4NENjT0lDd2RKYl9iU1Nuc2FQRFkxSlp3THhlSHdPWjN2T0tZdFFMbnRDZTBWRURYYXEzTkFHNURsN2t6djB1V0tOd0E2UDRpVkNqX2JuaDNLa2RqMXN2ZFg3alN2RjN2Tl9DbE5NTE5fOVpaME9MeDR5N1JtLW9JV094VTlUbUtXS1Z1X3dzTDdNc2VtbWdKTG9KamQ4WnRmMmVCbDBwWFdsb1B0Q0poV1BOTDVjbGxUb1dycWhxeVZYNF9YWnFBeHNKalA4WUw5cnlUNjhfa3ZDTXhoejBMZ3VqQ09VOXNIUXhlSkR2X2daYXllNXl1a2tKU3c1NmNqY3NGdng3OTV4ZG9fV2FxZDRWT1huZDlIUGZnRGJCQ2M4SzRrUmJRQjI1RDVSWmxDb2pZdW0wak8wS09zWm95X29ORjF3M1NUSjNUVjhyNVkzSUlrRjdwNHZxY0pPQnptUVpVNUUtYUJCempPdXRWMmZlYnBYQWdUaFdnUGJiZTZNT3o5YUEyWktMN005MEhfaUdmZzB3RF9rQW1taDAyaVpFenZQOEg2S2lHU3FOMmR1X1pjQU1tYkZSNXJzOFNVRUE5Q0dGS2o1dTVUSng1YUNuZVhMQWRvUjVrWTZkVTJpZFNnZHF5LUNhWmdOUnZZQ1NHNVp1STN2a2NVUW9zSDNHRGZfZzFVaWwtZlNTNG41SFlNYWtFaTNoX1ExaE4xblZyVEFhNnFtUXhXRlRfUlpFREMxYnBxTko1SFdhOFMzVVNUR1p3andrWTd6Q1J0cWNtSVpzRlE2WDA5M19Wa2Frczc1b013VFFsU1hZYXRUbmRwX1JMWlVSZkl4Z1NvV09MUjR0Y2lyN1cxUFlfTkt6Q2NnQzBqRlhTbGhDc3Z1UjQ5ZjJJLTdCZHhfUXhrRTRnVmJRNl9GenU3dGxpLWtZUzNaQTd3alB1SEE2cGJwN05YdkxOMWpoRm1feWl0S2VOODEzMWVuZlFFYUVxbmRHNXRYdk1vRkpiUUI3U29VVXZrSXZicThwUmtTNkhXWEFabENyNTJRMER5amxtdmd6OXh4UGtvR2xwNVctbmc2MUtjSHEyVEc5MG5scXJPMGliRDJhQTN3bFh2WC1iS0ZVY2F1dVljSzVFbjkyaDA2dkh3U3ItbDdOUVFMX1VRNTFXYXlkVzUxTjhYeTJVODlFLUstV0xkUEVXSmR0ZmV5X0JnOEFwQWQyRGhTYjFCbmk3VDg1a2sxTm5qTElxRGhpMjQ0YXZZNW9ZZzhtLUx4aWl2a2dlYU5NcGRUY1ZHQnhDbUpEeVNhdE9YMmsteHFDUUsxTkg3UFpLMkFuTWlIbDUwU0xtaE5DSWxZZ1VqWmJoR3J4RFM3Z2pJR0ZRbmpGN3pzNGNMZTFWSFhNQlBLRDZJcy1CYTA1RV9ObmVzRWhJMm1KdENwU3JVOTBmcm83Z1k0TTJPMGlzU0k2TUNEcU5neGpUUUFIV3pUUkdES3hsN2lEUy16N19tVEpIX1hIY05fQWxQMWF3TXhsLXExb3RMNmNuNWh1VmhDdFV2MGFSSG4zR0tUQzNnZWw3LWdYcDhNS2pnazdZUmFhTkY5b045bFlYcEJXUnNSRHdPMnFkZTBZMWI1OGNwT0lIanNXNEZ4TmhZRkczcVFjNExBbzA3V0JKU01TdHJSVkUwQ3QxaW1TWHRzMENDSUYtc2w0VW5nZTBIY2JOM0tCSTJwQ3RTSlZtOHNlYjlGM2pqekN4b1k2X2tROWt5VTNfVkczZWVMaDJwX2tuS0xNaVcycnpmakJTZGJsSzNCcmRlVzQ3Qkctd0U5bXBubHZ6cmxDMFdCTXpYaEJBZ2kwZ04zRGF5VWlzMFpvaTJqcDc4ekZtM0o5eVJFV291ejBFVnFvUWZXajZhRk5fSllTakZYWEJ4TzlRdWN3NUxJdE5DQ3J5TUhrSDh2UThQcEVScTdwbzV0bUl1WUk5eU9MTGtVZXg2VmJUTWUtUE1XZGxZa3Z0VlVUQ0hqdi1ycFRmQ01pNXdxZWM3VktLUzdmOTVuWTRDcVF5dngwa2NqSDZoSENORDVBaURXZ1V3ZGNLUGxyR1MtWXFOUzhPWEdzWWVDZW1mQ213NXl1OHE2b2R6aWNRZTYxa00tdHBFcWNLTFNKTXZyRl84eEdQNUx0RFc5MnpucVRnWFVDd1BhM24yd2hxN2JNVkFWYzhVcW9vZldlbUlpelM1TzJ2QkVRX0Z0VzFCWUgyMG1qUXNTeFNjT3VabE5JR0lfejgwZXNTNkdNZWgzSGU0R1gtRE5KSjV6YWR5MXItLUEwUk1xdWUyMWNPaXdyRm9pUDBNcllfN2hXQVV0TzJGX0dnZ3RUSmt4WFR0ZHdOdThSb2duWlpHbVBsWVJRbmd2WGl5bUhhN18xa2hkLTFVNWlmSHNKLWxkYUZJZEVDenJOdDZzOEp6Z2djckM4ZFRMZTNMUUh2NnJxSjc5N2VkNTRFdERoN2Jzbk5vWkl2ZU5PZzU1TnhWMVpUTENZYkxLQ0NLQTJ6MTRFcWdRak9LWl9TS1AwdDRCMW40Q3dFTGhPcE15VjVZY0NJYWlDcWtIVnhuTXBWSFh4QUJFOGlqQ1ktTkF2ZHMtaGY3OU1kS2R5b09uMVZhTEtEa19JSWtxeFRmRnViX3kyUy1VV01QUVZsYXJPTGNpMmNWSjk2b1h6UkYxRk5wTmo4N2YySzU2c2dDUmZVMWs5a2xJdWh5NVF4R1JySDFJX3prSVdhbVY1Rm1rQjYwVElWeW1IUElwLUw3WkF3MEhZZzAzdC1NT1JRQWE1akozbERqUUVaVlFtLXdodzdBZVdHbzdLTDd1dk5RemxYbEp0eEJ5M05iTmVldVQ1Y3FlbXF5NFRaeVVWNnQtQVBrRUkxV0hjcDRuNkZNdHFzOGlORWQ1Tmw5WXkzUkFhTzVpTVBXRUJNLTk1MW4wenhXNE5PcG1NR2NYczVPQlpRNEFZRHo2c0o2VlJlT0U3ZmtuQnlNRGsyNktRYTU4dTBFclpNMF9mSW9oSjVPV3N1ZU1yVG9pTDZoRnB2SXh0NmJZNkNxa1BaVEdCMDZnSVRoNUt6UUg1WkJUMmp4WThTbWdMaHY2QnA3dE93aHRuWFhZN21adnpjOEpNRkJZYkZfS0dTRVZqNFBTZTNLTjFCMDBJZVNTeUo1cXhDeXNKLWdrMUVBZFlXYmFsOWN0UHdvSFhTZ2o2QzUyMXhyWXBzM1ByR2JjX0hhNXpHR09YSk45Zmd0d3JzV0J5b0QzWnU4QTJhZXlWREdneUIxY1NodjVJLU96SFU2cDhtSl93Y29FYndCaVFGcElsWGRoSzNyOGROTzh3dVFWbUxSOTJYY0ZlTFJKbkhTNXBLcnprQXF6SEo3aHRhcm9rUlhTQXlFU2lRR3NISnoyVHp0VG1nRVRZTXZSeHBTQk5ZbjFJTU40d0tZUlVlY0Nvc0tUMmVNZ2lwcUNSaFQySUhyVkxuRF8zMWVsWk1MMGxyR3BVTGQ2Nzlkbk8yWWVkSkphSmhhNWFPY3QtSDRfZ2c2YUtIUDY4QWE0NjZUaXZGMGRBTHlkZUZNSjRta0dvblgzWnpqb2xrYWMwNWZDdzdxRGo1TWpKbDRDYkVxRDRiZHRpTXRsME8tTzBxYS1mdTJTNVpJMFRQNGVZcU9UcjZpNS1tRGZ1NG9JNV81aTRnaHo2MVlKZFBmdk1NOHR3MHM0VEpxOGkxSmNUeGZfQTVVcGhmMzBLQjRhYm5uRjRXS0IxU1FyU3VuMnF5ZjI3b2NpVnFLdFpObzVSeG92T3k0Ui14Uk5CbVlhYWs4U3hTRDdHeENUQmYzYUpDYXVrS0REd1Zsb2lOSTVTdU1hV3BYVG1SaWtfNDk2bkVqYW5TaHZpaXBIVTNIbUpxdTc4WmE2SWlZWk51dG5DeXNXd2ZWOGNhcXNNOXgydHcxcVBEZEhmeDZEZVZHaENpZF9lemh5N0sxdGdra0FDcjNWT2VsbGpwSG1QcnYzS19pQXJjVldRX0ljUXdCWVAyRkN0c3FNS2ZSTU80Z2NaUGhSVDFYZktYMVEwOGZnVF9TcFR6blplcF9YWTJGMC1jVjJLLTJHUHBxZGVkTGhCWFRBUl9BOHpnVEQ1elM3cnRRRTBGOGI0dEQ4MDdkVHlNbE9MdUJQcWZwbWs3QWdYNGxNcU1CUDc2SkVycXdpRXF5cWUzc3h3bVZfM0ZMd1RhV1QyRVBPdlA2bk4xdjhPangxb3JVbm1rYnpNMlAtSmpkMERvV3lIMnktV1pCbW9Jc3NUZ0t3N1RtWDlPTFFuWUlkTnF4UzN6QWk4UFg4UENLcDdqNTR6Y0pkekxxZEJaZmdSLWJnVjVPQjV4amVjWDR5bEhlS1hJRzNNa2p1SVNzQ2ZSMXVEYlZyVU1Ja18zZU5DWEp3d0dRUXVzVHlUWkY0c2hDY0lHWG1ZYkkwYzYtbjl1WWxQNjBKUHRaZy04UmVIZjJQbA==)
    #       track: internal
