workflows:
    default:
      name: Default
      environment:
        vars:
          CM_KEYSTORE: Encrypted(Z0FBQUFBQmdHblQxNHV1cGowdURrdDAxcGZvNUFfN2s4VXgzQlAwY2hIU3k5dTJUcG8yd0RJX3hmUmNrVVVqVkJ6SU1hV3B5ME5vcnJQaFQ3ZVlzWnB1TlZIY2NEdkdJRXZNRGRfbEVxcUNIdmx3QUxOYVVoNUhMUjRja3YybUtuV0RyTHdhTk5kRlhzREFOeHppNHBMbnRhUmQtZUh6TDFDdHZnZFk5M1RXQzgxRlRpaFY2V1loTHJDMDFuRUFVeFl0X3F3UTI4NzIwWkZ6MWpuLTFhNjhOVXZCWTA1dUthS1VhZ2E0bzZ0U24xUFZSaGt5SHdIRERmNDQ2bDNFUjZGZnVJUUdVanJ4LWFwQ1MtMmlxSHV6Qk5BWjYzblJ0UGI5Q1lKMnFiWmZ0cUZVNEktLXBCdTVGRTBLazZnMTZoTWNZZDlEdE9NZUg4dUxHZmliT0lIVEN3WGd2OHRiOHNSRVQ0aExJRVNnTi1takQ5cEJYUmhjZ0Q0MFowZDZFWnlQR3pubXNCQ1poYlpRVXZrc0cyNmJEdTZ3MmpLV19mYmc3ZUZyZkk4Mjc2NDVMSklRM0k2WVVtdm9FZGtERF9tUWNnaUZtbTM3R3NEYzlucVBjVzBLeTRHZmJZMWFPM1d5ZU9LVjBNSHZXVTdqSThQeTZlbUYwWWFDb3pyd0RwNnVIS1g0V1R4c0NETFBMaHlnQmpBeWgzemNGUTBhT2RDMTBteHNMTGRPYnlqdVJBbHNTblI0bXJTckI2NWZwWlhfME9sR1BfR0FZTkRoTjVHa2cwaVY5S2NwWWotcFlDRFFjRVplNUtPc2hOX2NzRWg1UThTVkFSeHVJSDhWNURVdXhJZHl5UFo1VFVvY0NPbko5c3NiLWtCZ3pOTmZmbzZxbFdIbEFHZDAyUklXeTJnRGV2SElVUFBWSlhmS0R6RkpFNW5MNDM3WlZNUmMyTDNnLWpUWjYtVVVWYllsTFpGaHZhSzdyc0NWWVBwSFp3UF80T09rLVJHRndoU1VKaUNHcVl0eWI5SGZidk1yY084a2FMb3lJVEM3N01OQ19GbmZ4UFp1SmpwalJ5dFBaQ1dHaksxWTJqb05CLW8zTmVHQXM3aEgwMG9mVlVYTHFQZlNIUjY4UDRyZjZfUW9ZUzhLN3EzZ1MzTDByME9HZXlhWEtyLTdra1J5Z1BxWkZyVHJDMmRleGRQMFcxbFdiNTItNElkanhMUURKeWp1cDAta0plX0tzaWU0Y0hheTRMT0NfSUpZTGJWTlg4Tk03dTBwZVVIUFoxY0JGN0dfVWpxVVNmcmxaUFNETjY2czdKQk9XcFZkM0lFYnJOSTJmaHdDUUhrTWtwbUVqclQ5dlk0UDlJa3VjUGtUTXg2X1ZqemJYM0tUdDZBZ001THZTcDhTT193OWhxS0NnSlZDWWdKelVpNWZwTmVuOU1RU3FQT0JJb1diTlhpNHdZcGhTM3BsWFA5TkZrUFM2cWdtS2llTkVqWm0yUUtqdzFFdXZHX2NWOHFMNGdQa1BzSVU2cThLbnozdWRqRE90cFk2QTRXdXhWNVJPZUpCWTNhNU9fTEYxRHlRcVdzZ1o1NjJoejY2WlJGdUlNQVhZSzkzRDlPMXNob2JJM2xSdktaLXJ5UTJ6cjVLcmZreEdjclZybkh3cHRjckJ4Z1l6X2V1M0tpTHpjSEJQWEh6NUp1OE5aQjNkTUJMNlBUeThIVjJmUWNXU0J2Mkg5dEZvUkhEWUtTRW13aldnV3BMeUlFZzM3WVgwTDFHczNpdktvZnJYTklvWC1PYUFDZ3BEa1k1VDlPdmRwX3c4dmZPTnMxaHdOd3JoMUdsUUduOEJqNGR0TWpfWHFUa3BDX203VS1ReUpCWnV6a0JrYXI1VXVfZ0ZJTnJRaTZoRW45cG1yR29zMFJMSmFVckd2RHQtaTU3VzcwSTJQeXo3WjhxUkdNTktlY2ZZX2lTYnVaM3pDMmtaTnhRaTE3QkVCd0dKYUo1TDQ1dUVidlNFX2Z4Q2J4ZXdSQmNPUHhoZlhoNzhCYm9XNXUyUGlDOEdqUExNWXM2SmhZNVhSTWo2cTlkR24wT1ZvOTJEbElNVkYtNFRkdmJTOEpvVHdOSGpWczlEUlNleXdhakp0VlA2S1BHU2hyaTYyOTMzdlRBd1Z1VkNuRkVJcERPeVFnU09FVlBwcUY0ZEZfcDZSOU13czhMYnlzUHhuVXlqSVBLUTlfSFQ0ZkZEdmRqSWtXZWxCMEZXSUtfOTRGZ2VqOWhieWpFNjA1R2xxNmpETExQVS1Wc0ZzeGFkbUNOTm1OdE1kcjljbWZwWVVLX0pYZ0hOWGpmVEk2eUVCN0FUb3dpcktfT3o3Q0hLRlJGVm5VOUUybzVZd1dqVHhmajMzaDJXV1JTWFh2ZXBqenAtQkpldGdFQWtkaW85RjlYRUxkWFEzRzZ1dS1jcFptVnYzVzhQTmV3RHpQVlRoR2pQTnpZMU5nQWJJNmZXcU43WnNBRVRXcXlLMk1fWWdIYUJIVDFxblh0ckZBVnBEZEFGbXFhR2p3RGY5RWZobUtfSlNzSktCLW1mXzhqWURNS0JWRS0yaFhaQkxuNDJvMUppSDQ0SzM0WTdHR3RkcVBKekxseEtBWGQ4YWFOejNaNVUtMk5hZ0VUanBEdUZ2b2FnbVFIOVBYX0lITVVCSlA4WS14ZUpDYzdZenNqc3dEa25NREVYNmQ0X3gtd0F1N2ptZl83bjZwdlMzMHVvTUVjVmlIX0h3UmdNRWc1aGhyY3VpVWJWbEhCbjhJTXJXbnlIZk1VZ2NacUNzUkx2UlVCQ2VTbzB0UUY2cEJ1YmVfUlZUdlZkelB0a3gzQ0RoYjVvem9mQWdoNF9TTFVER0FCelBTNTRTa1NYTFhESTh0ZzlXbjNHTUVsRjNyLU5GY1BYRWZuaURUSDBBUHU1MnREVkdaZkc4U0QtaU5yenFpVTZYS3lDMm9VUWdmTjI5T09kT1RVUjA1dGlnenAyVl9LMzZNZEhrQzcyalJ6YU1iOUxBb0F3aTlLZWVHR0hhdDJlR2xQOTF0U2NBckZZUXRuVXl2QllBV0NmNWFldTBrWnJ6R1JlVkFXUDJFRk5qOEhodklyNWhRb1JzXzlMRnRsVHREaTVFRzNVRVZ3S09OdEhEdTByYzlrRDlGaHpOWGFybHY5ZGxRQ0ZQZzRwSXBROF9ESnJlbXZycnZJNkhJcGs5VXZIZF9vVXgySEtmeWpVb0RWMXRCdng5RDF3aXhpdXFJMjNLUDQyYVM0N3l0bnZ6cDJaNmd4bm1pSUFtUmdZUFpDZTBrS0QwLXQtdXhLMjhZajM2THlYajhXSW9yMnV1OWVYMVpNci02bkdPOThZVDlWMThLc1pndTVSa0hGSmdKMVExbUJheHZqVHFSVlVtdlpRN0cwQzd6UXUzdWdYb0NsakpKSFhqN2NXV2VEM1hOUXRoUk13cXlCR1FhNVZqeVlubW9CVFBKdEY2TDFTNHdkYVpscjhGd20ybGVlTnE4ajNvU2pUbXFQN0FPc0ctVWZfaWx0T1FqeFBjQzdQd2t4ZnM1QlBjVF9ZUGJ3Y3ZjVVhiM0U4VUNtS1VRd2lfVHBvMm85ZlZtNVNBSkRZZ3JzSThvSlp6V28xTkZBT2NabFBDY3M0X29Ub1BXZXprQ2FKQTVXWjFPaEZVSC15NFh6bENlMVQtb0hDSm1VNERKdW9tYlFxOG1zRkxOa0tkZU9oR1lZZjNHTXJLelFyYlc0OFhRY1R3YTNsLVI3WG1kREpMc3M5ellYdXNXMEk4UXFXLXkySVlqR0dycFFxaHRpNkZVSG9QSEJiczJzdThFMUtiaE02LUx0bnB2UGhuY1BHZWV4Rkg3cEczRlQtTllxSWZGMW9TTjFQLUFwWHNfdHZVZ0RuRk5obHlLMnV6Q1hQZTJYaXNNNUFkWFU2dXdYM1ZNb2JONzVRZHdldUQzZnZobDI3WTRBLW5nelRlY3E1WVExUU5BREpFSEpxTWFtc2cyTWVrbVN5THdNTEdhR1FMSzJUbmVEZUdHaUQ4dzRBcTROcGc0c2praWcxRTNyR0pnV0Q4QXBIUnlraks1UTREZ0ptLTF0aTlScFRVamVoeXZiMFBQd3gtR1hzdTYxeklOd0thSDJHamNmeU90cWtrYlVnekxhb2FKZDllcnVqekdxXzFmekNESmVtUFhfTUJmMjQ5V3k5MjA2dTJ0allHVTIzaFROaUxxOFBWY196ODY3U3g0M3lOOFh3VjZvYzRaUEZrYUVFOU1mblYwbnJhOFZaQkJSTEhwRExaYm9fY21TbXlSSzZNaHhwR0FXOGVGNl9ER1p4YWt1V3poTnpJT0szNm9xOTcwMDFqOHlpNXRHYUFlbF9lVkctWTE1b29NaG5QbnJ0VjMyNFZ5akhLT0FKUzJoV0JqYjhBZFFVeFQxdHFHTFFLTDBvbjJNYmhWYXU2Y3hfZmN0eVE5bWhrNTNRNkQzXzAydlRCRmx2OWkxX0N5SEFiNkZYemZYWU9sc2ExWDk3MGJWMWc1SlBUTjVhWjhsemVzemhQaWFxaElnLUVuUzEwWFhpanM5WF9sU05rYWpfYkFWTnB6NFRrQ1BCaWhpVS1oeFpSekRlSm1CSHZEbGJfZ3NqNFltUE5yMXdqMS1fdFNoTTQ1Rnl6SS1KLVhjVEFQNm9ESkhqMUNYTjV4a0xsa056M19IaVZZdDFSYnh1RV9sdnNRbk9ramQxQ3pWc3RwcFpLeC16WkE2emFVcUIzb1ROSlNxd2gxNDgwZnlJanNKOGhpTUVMdzBxZlZjRzJlZVpCMmYyTk1oNXUtOHp4Z2hGck16RG45LUM2TzhOU1Rsa21YUjRwVkltZVNncXFpTXFwR0ZoMFJrRkJiV19NT2tJbTRJVFFIMVpGaW5YZkx5U28waF9feV9Ock55VTgta1hJTHRUZjZwMkRvZThVWlh0NWhudEFmbU4zMUZxNXJ5bGRMWU5td3dfTHE5LXZ0NkNiQWZTbFFYaTNwNkZiQm53NUJab0RzNG5Ma2o4MjgyUWJibGFhSDd2Rk9GSU1SWTZPamRzU0ZIdUVuRXZ1TFpsMGY4c2Y5bEs3RzRsTllkVHh5VmNhQWhBbmgwY2xJT0h5M3JXSUdSVUdYM3VLMlI4bXVOd3NRb2VfVGhfUE1ST0VvYXdIckFUWmgtVWtvUzVFbTAzeG1uR0hKMnBCdDlndWsyeVVoLUU1WkV6ZE8xZUhiQS1URVEtWHdiZ2xyeVhLb1FCZ09IT2hwWWJJS25NOENXU1h3dWpJYWJxbjByVThCVmN0WUF1NWlYTmlvV1hyNkx0RGZGcDVPSlVCdVdxdG9meTAxSGlGZ3MtNXMxTzRyZ3BONkxFQ002NlhUdXVmLXZXdmZONG5iU2Yzd0xlUlNKMW5ucGtEdW96STEyQlJFWjU5VnFodVVXOGczcFo5cTVGb2VjbA==)
          CM_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmdHblNnS3RfTEt6Y29ER1ltMlk5d2V5S3h2NThmUnRVN1BhaDIxTmFuaDRGZ2JWd3ZJZzR6c3VJVkp1MFZPNkpGQmNRNGdhdV9YZ0VfZUVrWWloXzdodnljV3c9PQ==)
          CM_KEY_ALIAS_PASSWORD: Encrypted(Z0FBQUFBQmdHblNnS3RfTEt6Y29ER1ltMlk5d2V5S3h2NThmUnRVN1BhaDIxTmFuaDRGZ2JWd3ZJZzR6c3VJVkp1MFZPNkpGQmNRNGdhdV9YZ0VfZUVrWWloXzdodnljV3c9PQ==)
          CM_KEY_ALIAS_USERNAME: Encrypted(Z0FBQUFBQmdHblRCaTJnOHFkZWxhZ25oZ3NHTE1KdnVtTDFEdVBGU25zekgxS29rUEdzemZmNUdXTVZkVWtXMXNpMmREb0RCOWF5UVdUVkI0cE9mdUtCNVdreDdsZms1RUE9PQ==)
#           FIREBASE_TOKEN: Encrypted(Z0FBQUFBQmZFWFB6dkk4MDJGdFM4U2JPbXo2d0VWaEJ5czg2UHY0ZEplN1V1N3RoX2dXNlFGS2dyZDNBS3prV3lOeUNPTmV4UHlCemU0Rmh3ZFhHNzAta3A4LTl3TDZIbjI2V2tVdW9NR2lEaE9namI2dzk3SzZOcG5leXRCZDlRS2xpTDdOc0QxalJWdTdnYjZGQS03NHo5ZVItWDJ1ZTJzSmxJSFI4N2VjTTBWc2ttTjhTeDJ4UHRhOEpJcktfSlFLN2pBd1lWM1c3aTlFQ0R2Q2czREh0ckdTbTVITTRTZz09)
#           APP_CENTER_TOKEN: Encrypted(Z0FBQUFBQmZFWGxJQ29NbmFWVnNnZm9kRTlvUEJvc2pyNk5yRnMzWmZDS2dneUlSS3BXRHBwTUlEd05XY3FHRFJnVThFcElVWE5vZk9saEZrc1d3WE10TVhsN0RxVExXeW5TSl84WEM2YkJhUEJGMm5na0tXV292dUx3ZGFMZHRIY3pUWGdKV2pPT0E=)
      cache:
        cache_paths:
          - $HOME/.gradle/caches
      triggering:
        events:
          - push
        branch_patterns:
          - pattern: 'master'
            include: true
            source: true
        cancel_previous_builds: true
      scripts:
        - |
          # set up key.properties
          echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
          cat >> "$FCI_BUILD_DIR/key.properties" <<EOF
          storePassword=$CM_KEYSTORE_PASSWORD
          keyPassword=$CM_KEY_ALIAS_PASSWORD
          keyAlias=$CM_KEY_ALIAS_USERNAME
          storeFile=/tmp/keystore.keystore
          EOF
        - ./gradlew bundleRelease -PversionCode=$BUILD_NUMBER -PversionName=1.0.$BUILD_NUMBER
        - |
          # generate universal apk from generated app bundle
          android-app-bundle build-universal-apk \
            --bundle 'app/build/**/*.aab' \
            --ks /tmp/keystore.keystore \
            --ks-pass $CM_KEY_ALIAS_PASSWORD \
            --ks-key-alias $CM_KEY_ALIAS_USERNAME \
            --key-pass $CM_KEY_ALIAS_PASSWORD
#         - |
#           # publish the app to Firebase App Distribution
#           apkPath=$(find app/build -name "*.apk" | head -1)

#           if [[ -z ${apkPath} ]]
#           then
#             echo "No apk were found, skip publishing to Firebase App Distribution"
#           else
#               echo "Publishing $apkPath to Firebase App Distribution"
#               firebase appdistribution:distribute --app "1:717260803432:android:2fa26a4fec7583dd8b5add" --groups "testers" $apkPath
#           fi
#         - |
#           # publish the app to Visual Studio App Center
#           echo 'Installing App Center CLI tools'

#           npm install -g appcenter-cli

#           echo "Find build artifacts"
#           apkPath=$(find app/build -name "*.apk" | head -1)

#           if [[ -z ${apkPath} ]]
#           then
#             echo "No apks were found, skip publishing to App Center"
#           else
#             echo "Found apk at $apkPath"
#             appcenter distribute release \
#               --group Collaborators \
#               --file $apkPath \
#               --release-notes 'App submission via Codemagic' \
#               --app stasio/android-example-app \
#               --token $APP_CENTER_TOKEN \
#               --quiet
#           fi
      artifacts:
        - app/build/**/outputs/**/*.aab
        - app/build/**/*.apk
#       publishing:
#         email:
#           recipients:
#             - bondarenko.stanislav.96@gmail.com
#         slack:
#           channel: '#dev-slack-publishing-test'
#           notify_on_build_start: true
#         google_play:
#           credentials: Encrypted(Z0FBQUFBQmZFWmx0RDV0NG1fX0EtUG9oX0hkZWFDU0Q4UkdGVUxZeVhfTFRiMnZ3dGRQUktkVUlxSGcwenBPc2wtSlhjV2lJN0lNQUhSRXJ3OE5OUXFfcDN4ejNVMzRsTlhzclI4eWpLNk1jLVpGNm5uclJlZFVYT3dsZlZUTzVFZFBXcmZreVpoNXFZV2lVVjRteXRhTDVqRU5pZ29idjVrOEgyTWVFR3J1a3R0S3JSb1ltNFFmZ1kyNndmblpwMHJZM2o4cmlPWVh2cXQ1OVRTMjRMSlNyMS00b0RwSzYxRm5pWFlkRXYzUzlrSk40emM5QnNkRkUzdkxVOGtUakhtS0VDMzdUeGVTaU5RUktLYXBoT0dsejhtUWVpdFRVN0xOSXoxMEZvOUZncE52dGpQbkF0REhyc1lPZnlwOFFUV0FTckVldGdhOXIwSlJNQnBlUWtvQS1FS281d2xCOHo4QzMtcFJYa2ljeERIdFc2NnI5Y0NNcDRwR0hDa1ZsaWVpaV9lODI3NE4tMzVfanlxdDJpeVViTkxBWFRoT1BNenlZS3lJcUVaMmltRDI5dldtek1SRGVnYURSd281enVJcEtpUFhjdlNnRnJFaG5yU2phSTJId3hIdDhXVjZRQ19tc1R3cmdueV9uUm5GSnpyNUtRLXlnOHJmNzNlTHFaZExzaFNaS2xadEVkOEhGM1VDWkRWSE1aUVdGS0huZTNaQnZpZHlZRERDWGlZbTItcFpUWHVNbXBYaHhBZUdKal8wa29DQkFYb1lCdkp0cnNSSkszRXBIYXVlZzFXdXhYT0N5QjNGd00xYWpBdXVjRnE4UzZhdnNKWHJJMEVsRFBHZnJiS2JaR1BSNjFsTHFQcG9uNXhSSTQ2TFBHYmc3UmRUSTkyTy15LXM4aDN3WVNYcmFjbXpYS0NjeFVRanVfQ2NvVGtNRmJsTHZCbDlfWi0tdVlUWEdieFdBYzZybTkyRUdWc1VISXZ1eVlfVVVnNlowUXQ3Sk1WVzA1U0FKTGdLZml1MTlqTWpSNnJuZl96Q1kybnp5V3VnVEd2Y1RoZlVHbjgyc2RLUy0ydzdOeEdWRk1pSmZHU05ydXdCRVdBZmVtd0E2emlaRnl2c2xKODFwWkdoNW1BeUpJSTRLMXVURHFnRjluTUdUX0dfZHRFaENmaWR4ZmN1cXlzQ0pKYUEwYmpvTXJKQnBFd1NlUUR5VzJmUFY5NXkyb3ZuMElNemU5VlV3b0JMM3RKZkhpMU8ySm02MHVkeTdCUmV1MjBwNnZReUIyN0NqcHFYTHJldzlhVlJScS03OVZ2RUZTRU84Ylg1a2VJMXdINmhhV0x2QmlrS0JLclJSWFREUUxadFNFWmdUS3hMRnMxWUJiRjJSSElBQ2VtZl9iZW9Ha2lGcnFGX2ZZaDBNbjZFbTQ2OFlYSFozejFONTNtc29CTmdxYlhtRmNiajdKRHMyam9laW9VTHVmaWs2c29TTEh1cGJ4LWZtSlhxWFotQlAxUkR2MFo5MGpXMkpiTGR4bDdnNTg5aVNNUzN0RVZicXZ0OGs4ZXo4aXJRVFZmU21kbE05ZVp2S0JaRl9ScnpKTFlhaU1mTGRSMTRLUzBZVFRXV0NaZGlHUlhQQ0dtM1ZXQkNwbzVYUW1PY0FEZFQyY01qQVdCZTkxTXJjTTQyTXVYbUZ4UlhHc1R6dEZzZUFKT2IzWkVFU2s0YnBVRmlUdTdCcTk5SzFucGF6MDVqWS1tY1ZxRzVfekdJUnhQMUh3MVdscGlyRjVlVWgyeHdlMzlUbVFUZ05MV28weGpLMFNXQnFsQ2F0STVwX2pwVERZOWR6UkJQRzVsSzYyeC0xTzNtUmgwVWpmS190OFpNdzM5NlRhWEt5WUdqZFZFQkUzZzFUZUtHQWM0dURxb0JHaDF0UzVwUklMSURyU0xNMkh0UUpJMU5hbFRqNElMYjFwTWpKUFRMNnByYy1taHRKaWlsYUxNXzczaVd6blgtUGFoeDZic2tGbDFGbzd2cmRrVGh1N0hqUnBpLXJnM3d0ek5vTW9RdDRFQVJJQmVaUXo1LXRkbXJOQlgzeEpjVUxOQVZEdXZCUTkzdUwtaVI2dkZzWXN0VGk1Qkd6TjlsYmNfZkhKRkwxVms5M1ZyQUljVHdjWjFNR2t3Q2YyZ2JfbkRRMzh6WElHbUVacE4tQVoyNzhSOFlCblQxQzFkUmQyS0pvU2FyT3lNQ3V6RnRDT2lncjI1dWVLTkJ3UGI2WnZSUUJKWmZHWVp3LUFSQ2lqeHZWWUQyTWJxVjFVUHBtUG8tNlRGU2xLTEdVOE11VGRHSy0tS0lidzl5OTF2NWR4UHF1WFBwTWJIdFdtRjlHWHJTWXZEdzktTFFBVzhKcVhrY1d5RWdlQ2dPVnM5WHNxSGtVNW9EQTctY3VrOGNsQ1FnUC1HQzBWZ1I5V0pyR0N4WFg3dnE2REJrS19GTDd1VTRRbUZhZUQ5Wi01bURaQUxyV0lma05EZERrNGtzcE9Hd045UlFOdEZoZW8wVDBGTW9VYlJfLWdIN1dCN1FFdGRiR1NNWDBOaENHSmF5cUp4QndicHQ4UTk1Y0hSUU5qNVhsMHFSdWVZMVUyUkV4WWJTT1ZzSmhfWG15MUNvYjNaUW9sOXVONTh6UUNSSk9SMUoyRzlyUVRObkVvU1c4M3JsYk9KbG9UNjJjWmFHY2RPSjA0UnlieEU0b2FtRkhISEFIc2hobGlqRld2ZXhkV3NSTnNib1JRb0V1WTlSdmpad3dHWjctS1BHLUVNbkUxY28xeWJ6ZE1LemxOd0JWbTNELVp4bURvWEYwY3VISkNORWdHUGJEVjdpQjFQMmxNMDZaWUdDNFE0TmwzUkt0dU9SdE1qOG5tb2s3TFFJS2VfT2NfbzZNTHhlSEdtU2xFVkNpdUUtcFdhN0l6aF9aajNOdWtBdERibWVMUzhFZE1nQ1NDaE42aDVEOGZtRXJsakNwTDRFTlhLLVAxdlpKWVQ1aVJESzRSaWNfOFZkSFg2RUdiNXU0eU9zLUdKNDQ0Zy1XcHhoWS1tUFpsSXg2blhUVmxpSnNRellESm53N2pGYjlNTklka3pzajBKVGFPV3RMclVuRmJJYUhZMkhKQmJJN01yRmc2SVpvYlZSQTJzZUhEV1NVenNuZTl1SVQ0V0FrUWVLZFF2QlNxdHotdzFDR3ZFSnVXM1Vnb0ZJT2lQblU4WmtuU2huZk9nc0J6Z3NjQzhCTE9ZekhkLXRFVUVac2sxUjZXcTlzMHFBSmhlWEJCemU5TVlFNkJZV0pDNGFncG1oQzJvSnhncVhqZG5KdlIxWTJSQ2ZhYmhDdWpoNVVtdEl2THdYNm1wM1pVUU5LVE5xaGEwdzJJYW5CRlVpaGlXMEVFVEdkTzBLblRPSDB6di1KZlotNWR3c0poNTE5MWVQNmdCR2c1VkZRTVRSRzJaaW80U3dLVWdhQzAzMUk5X05tbW95eExkNGRzeVlHXzZ6ei1Tb0JxblJfcUtudWViNkxoM3lHd3k0SENneEpZQjIzMG1VUjNZeGxVM3dHTVBmVTlJREpVZHRsWUpaQXhNdTZRa1EwMHVOZUpiQTd3Yk9wemZha0NBTjYzbk9ZWUc3OGlwZlhJRFAyWVNucWRNSXhuX3YyRVBRa2dIalkwWGlpY0o1bG94Z3FlMWtLMk5Ldml2dDAybDNNeUdQR3BWSUI0d3dkclk1cXhnWm5KckpwQkFaWXlNeG5SeXlmaXNmOTFrTzFhT2RUM2p4S3pkRmhrUXpJS2w0S3NWWERDdHBjV24tNEJ2ZlBkV0VjN2FNQ3lyVTBGWXhNQ3JLRlpqVERXXzVXMnhRdUxrSDVOUzh6N3dHSC1SRE11QUxOUVpVdnptU0pmM2hiVGFQTnN0ejZJcmo0TTZoNC1aZUQyVjlkNUFYa0d1bGVuams3U1dQZExkdVBvWXZLQUYzeFFJSnVnLUZzZjl2c1ZBNS0zMUh2aUNpcW03dzRrLVJwTG5idDRrZzRsRnNOWUwxNy10b0ZSOHk1cGVZbTYxTXByNWJ1Z2VmN2pFWXpJQnkzZGpheVkwZ2FxLWtzSG5WbE5qQWtVZ2JNc1doZmdiMXFTNjE3VWpSSjR3bUlMUjIxMy00NlBWcWdKSGxTWndSNlFaSWd0bkJHTlc1TUc2cmh2MEQ3UzRueFdHbkZ3WExOR1dPWmdKTFlsaUlDRDBlVzF1TGVXdEV0ampJRW91YkFfWFVRbjVFdm11UUt4aXR3RmZiT2VUb2RZdU55R2MxVjM3MXpaOWl6cDdaeG1nTXdaSFJmTGRhdHQ5YWJrQ3AwcjlVU3NrUkN1UzdTTXV1TUFyenpIZzJHS3puRGtXbWNic0tkb2NqZ1Y4cmNTTThaMkNwTUJ4R0tiZEpCTkNvTm9JWmI4NnRFQWdZX2pmOU9kSHUyekpFMDlXNDJBSERqNWdSU1RBSEl1NzlkSGpZVlIwSkFENGhoM0ZpNkFtRkpBWF96cVJWMGpXUGF0b0k4U0UtRFhVS09Lajc3WlRuVy1mQ240UktuN194d2YxMERBZXJGelFiZ1piRG1md3V1R29nRUFXb3RrcnBFT21IVklWVF9lV0J3WkFTS2RWQ000NjdLMGRnWGRPSlJGd01zQkN3QkdGSFZLTDNJRnVHaVVaWkhpbnVTOGl3S1pIUjcwREM3ekxVMFdBaHVvd19BZWFvbURmMlF4SU5Ic1ZHRmJrTml2a2tiMEVkX3FCUTJGSV82YnZSQWpiZ2FjVzlkYVM5bXdUR0JNY3pER1JIb2VmZ3p3T1E5NFNIWTZXMlhmcUpRMXBHT3hLeTdjTUVib1c4WkZDLXI4eTBDQTR5NDJVaWxTM0dXeXd1STJuaVA1dWFad0tOcFI5M2xVRWZqdEctUXNQWHFGQ1FtbjBLb3lvWW9SSVlnaU9jR09lLTNyZlNIUTBGb2ZLdUdnYklCMVQ2bDRCeHN0ZTBKZUpMUzJUTTUzOTFEZEpSMUF4OXZpY2wtTkM0TDRpUWRtSjloMUo2aHROUDlveXE1SlhBVm5tWFRGOGd5Ykh1c3ZRVGRrRTJjSld5VzZnVUpBYmZmV0NLT3dKU3BqUXJCNFc0akExMGxHS3I1RkhvYlpCLVhXb2tyNV9PMU1Ba3phUjhiVzYxZTYwVWkxNUVDb1BvMlV3MmhwVHlwdVkySFRYWWJQRTZPeGR2TFk4R0w2NG85UFI5TmFUcDVRSWRjWndlR1FpSjRhcnR3WWhGVDFid3BNYWJOWWpDeEpCbjh5dU8yRVQyRnR0NTZlOVlkLTJpdkdBWm9vZDNpRl9vaGc4alQwTWZNZm1tMmZtUTFjcE5VWG5GNzhBTGI0NFUxQ3NtamFoUGVnNkFzcXgyNjd3Rl8zUHg2ZkNhN0ROSVhGSUpZYWhzSFMxb3NQcUN6RDNodk9YZ3pCNDdQdFNtOGwyTkZBWFRwUGtqbTFOcUFEcml0YVV4d3llXy1wbzM4WFZvY1JJWmFGZ2FYZkc2a01JZUdERjdQZ1ZyeGQxUFNIUmJ1bVAtWDJXTHdtMFlvSTIyNE9veXItLTY3M0g0S3JMZEhkVTRNUGo3MTBCcGpvVkI1UmcwVGg3VXV0Snd0TEhPUkpvT1ZCZ0p0NkxCdkxIeU95RDhEM25oS290UEozYjZyWGJwMEVPV2JhblRtMzRHbk5ub1U2elpEUEY3VjVTYjFPTzRPODlyTw==)
#           track: internal
