workflows:
    default:
      name: Default
      instance_type: mac_mini
      max_build_duration: 60
      environment:
        vars:
          CM_KEYSTORE: Encrypted(Z0FBQUFBQmZFV1hTSmRwdnZCaE1YbUN2NEs5aklENldFWkJUVnJyeTJPZ1U5TGZqdmc0N3ZYSzdkN0R4UTBoN0pZd3RrSlU0SzJqRmt3V1hLcExheFRMMFhuX0RjTXhBeEZaMDNzUVlra3MtOUp0SGxHQlNBZU1WU1hCX1ltV1lkeEpBMEdZYVA2d1FUMFVMeXhiakEzM0dkNDlIZjZ0Z0wwcUVROEYtYWg0blVibUhrZF9PRm00WHN1aUxFTlBHejJ6UlQ1eVRXS1RuaFluMFRad2xIcFcyeGxRdXRXSE02OG9UcENZdENUamxhVm5CN3haUmFHeUV0dXExcERJY3hFUUJ0TGQzazJSX3duQTVGZ2VRbERCU0dYdHZkY1RkQV9ES1NTa3pKTzliUTQtS2R4NXZTYTdSYllOc2tnb0IxZWgzZGI4aWY3RkhqWFBTa3RoVmFhbEloXzVsUVByZmd3U2E2SG1VbUk4UldRem8wZTFNdzhsdG54cXpiTF85UnE1Mkhpek1yV0xaZ0lhd3JUNFN0dEdQc01DeHFoeXQtUjB5NDdEYTNVWDlFRjRaRzdRWFNBT0RpZUxRMDJMUkxQeVdPZjl3VEMyZzFvOFNtTXNpQlFRd3RIN0prV0VlZC1NU2lJOTRuZFhnel9FVTBCaGtIVFd1bnV4RXJoNFFlNWN6eFFnWUx6R2lRR1lENEhJVy01MkgwdE41Tnl1ak13dXkzc29OR1cwNE9KRmhuRm9VUi1aZlc5SVh1dEVFNVE0M0ZCYzBmNlo0VXZpN09nc2Y4SzhQdm9LeGdRbkJUWmpyYnF0czlpcDlGejBUSGVockFBY0labFU5Rk95OFZzdU9iNVoyR1owS29neURMLWN5UDNsZmRzcm9seUlOVG43Z2ZKdFlJN3VpMWhKMVpVUGNOR1JmS1dZai0xSVEzSkRfNjZ6TTRaRzZjcU9MLVZSSlJHdjRrV2dMZ3N0VHdxdHMxb2dfNmJEM3NFUkJMT2lkcjVpYzdNZEJZX3pCR2wxVmZWMjlMOTFnOGlLRlBSOHk5WldSSXNTNmFiaW9lMVBUQ0JiUVFCUlUzZHNfZmt3RzhLb1J4eDNzdGs4Nk9aVUo2d3F2SmczQUFiMXZudVJiV09zX1J2dXF2T0R4dm5hdzR3TzVDQlU4WXZmZ1NaN09takR1ZmhpS1FvWkRZN29GQUpyY0t4LVVaODY2M0FzeUZIWGF0VjhqUmZCM1l5MEJqZjBkeTYwT0pkWEpsQU52ajNuX01COW1WTkJWc0lRYUE3SnNNSU5MTlRjcFJfTEpCMTI0am9EN2VqNkZ3alBkQlVYbTFNOU5VZmNkeXVLV01LWExpdUNSMlhScmo3bFlZUVhYamU1ejctcE1sSTBoVmdGbTU5RnBxaFVkQzVROUcyS0RkaE1xX01tSVdSVTVWUDR0a0NhaTMtbXMwVDI4MHlxVWhsNEpjN0d1ZzdlV0l2V3k0ZlBJaDEwb2x4dm4tWWcxRG92bDRrMjdIemNlbmJqNkRuSlRxLWxpS21fWjdEWmJ1cW9ma2NLZ01YTHB4X195LVF3X2ZlcGxuTUVMdlRGU1o5RG9hNWJNOElFc0o3cXp3REp5RDV0UGwwVFlUeTItNUYyMFRtZmNjVmtBRi14c2hWNm5tSkhpckd6N3NINFVvQnJnR1RFaThDaXBrRWdvVlZJbHl5cHpvdEtNUjNkRjBQd0JNZ3Y2MjcyNkJXMENySnd1OVdLTDhabTl4T0w1d2czNjJDLTNUdENEeDBHR3NQTFlmSHR3RXB6cDFNWkcxak5pbV8waW9jQlN5ZXVmck5QejVRZHpwbC1zN1piMmpPS05iRkVrNU1yWWFQQS1UWXItdEYzdVJsWUF5cjdYenE2dmg1bzdkT1lhbXI3SkRhWVcySC03QVg4emk5ejlUTk9peVJMa1hHNDNUbW1iQlBjVlN3NjB0RlZnQ2VQeV95MkVlUzFUWHg3cm96S1V4d3c4eVFfcVc0LUpJWkJ5Y05iVWktbERaZU9PZGNaLUpkaGd0bGt6NmRTaHNGNDJBV3RidnZSbEpoT3ZGMDc5UjRzczNONTljTjc1WGh6NXNPNEpLMlJkblVTYXpvOHJDc3Nyd1IzT2dRWll2dDdvN3R1UV8wcFhtVmp2RjNGd19Kb21nTkN5SHVGQWZ3VFVwX1J4SWlEWU5KQ2VxSVBwc0lzbzZnSXItR3ZFVFJ6S2VtQ2FfT0pCV0plVW5aU09BRmlRdVdjcS1ma05SRlA2bmRkaUNRdGV4U1J3M1ZPTGhJNTJ3Nk1sWnJ4NE9BZGE1WFNwNWEzOFRhRl9kWGxDdTZNNE13RTZzaGZ6QWdPOWw3cEpnU0x3YURoQkVwUWVVcU4wREltTzBPQ25fbmhaN09ZRkNLOEpUSk9ERmsyZEdsdDBVVHZNZGhVeUkzbWlpS0N1RHhxMTA5c0ViS0xYYkdTeWk5LWJTdjE3ZFJDbGo1ZUdmMEstUlZFSDdFZDk2QjZDVUkyREVILTZOTEVPcWc2SWxjWEw4OUxqOVlzekpjQUIzWmN2VHczZFYtVWdVektmd0lTekFWNG1mZkktMFZPV3YxejR2ZkdJV2lsSW0wZzlrLVY3X1NtWHpuZDdNa21oVERfUmV3aXZOb1NtTExVd0xtSHJUVzVyYjdXdG1POU1JUlQ1QVYwcjdLQWxaMkpSTjB6dDVSZlRhdGdSTWVJM3hmMW5vejk2NXZKSklXalJZb01hdmJ4bDQteEFlYTlLblhhZDJmNWlBUDRYallrcmdINTBrQUx3SGlIQXFjUElfU0RFMTNyTkFXeDE3UTdyeG1PLTVYVGJLNXlXY3BudmlvOGdxVzBQQUdSNUNlU2trY25mR3R0VW5SNHZkOXVtbW04MUZwRDdXNEtYMGJmd3prNm9tdUxvbl9ZNTZJS3JEZ0xhczJTWnFkQVBzYTFwaVNEcElTMDdGRXVxSkpNemN5anNhRnl5QUpmb2swckFHaVozbWdLc3BaVjVUZnUzTHNhQUVzcElMQUlGUXVrd0ttaVFncndCN0FPVFlJN2JYZzR3emF2SXZnb3VMaDdVLWVQOVNvbHg4RWEzZWhpY29PTGRvNE16UW1qNWJGbms0TDZmOE8wQnEwMFpGUUpoMWM1QW4wblVCT2ozR3lPeWFpMTFZa1p3Qk5xM24tcnBud19vS0FZTTdPUjNaZnlkeHZwZ2VNanpNa2tHdnF6ZTFheFlKUEZFZXdXSVY3eVZKc1k4cmt4NjlfbGU1YzRReVRwUXJaQmFYZ2pyX19wUmpyWnNYZjlUX2p0TnFVUHBScVZIdXhyT0NJWU1VclZIRmxfTm0tMTRmaGR1V0dwVW52V1h5endQR0djSmJnT0NuZkU2eWx4ZDBnMmJNZXYtZ3ROdWFHckktWl80bjZ0N0drZGdobmRkX2pMUWw5SnFkbkgyalZ5N0daRHhZbWMzLXg0UV9kSjFxR0VIMzZ0TE9mTDMybjRsR1F6cVBmTHZXZFhCTGc5LUlreGxRYXpRZTRfdjhsXzYwd1pwMzhrcUM0dVc5ZGQwdFFmbHRUTTBwYkg4dHNPV2dSS1laVkFCQ2hkTkQ5VE9lT1F6N0tGS215YjVkOVBja2RSeG1WbWQ2YVVzOHl1c2plWlVuM1M5X1FEd1p5MDJoYThzSEdfajQxejZyRWNuM2t6WjdzNEs5TnVTX0RhMHliTi1rTnpEd3dwSnMyM0d0Um9nV2JKQXU2bV8tN0U0d284UTA4Uk1QaU5pS3dnUldrYTZreWVOMHkyS2VaQmE1QTFzTTlBNDVOWVZYM05TcmM1WUNRYlF2TnRzQkwydEhaWlgzMEZPZEJCQ3pNVy1BdW5qTzhZZV81aDFHTWR2ZGs4S29RNmxCNVhkY3JQVm1qTjJzUGhHRnpkZFdycHU2ZXlzNk5DNzRCM1REemh6b3haenUtS2V3LVNTcTUxQUJGX2xYN2QyaFY1bzV5TTJqQW9SYzlWaWE1Vk5IbzFYa0tiSkI2eDhweWhLSTRzeHN2WWJaTGx4V2poVm5EZzNiQUJKZE02WVFqaF95YUZjSGozaGNCTDIxUlNuWGJqbVkwV25XLWVxV0h4em1YY1pvcC1TMDFYODhhV0xub2NhNzlXM2t4bXNjX2JoMUI1dHk0NkpodGlCTzJnWlY4bVVxeUExVmJoSDFyOG0wLWlQWFpwbHNuOTZZSGNJQ2FCLXkxVnFueE90SHRoLUEwaVhRRGlkeFlsMnZXYWR0LWZFb1JnZW8xNkUxNURIR2JqUE53NDJQanFMaFl2dVdkMzhMelNEcV9YbUQyNno3N2U3VXM4ZUxzMTU0blYxM0xCeUFIcWI0THJjSjdrbHowYnRBZU15bnNraklySTFuejdhYXhkWUxuUFluTVpNX2JRNnZ2c3dBeEVKUTRac21HS0xLMUtYQ3JacnpqZXFGaWpQa2V3TzUtZy1kRE1Da2E1eWNBQUFza2dWQk5YTGVKR3lCUm9DUHBnTVhBV2I3UHNUX2djUUlpVzdTNE51bnRvZ2VyNmRfcHBLTzlfR2Jza3haQjE2RG1LaHZxRXo0c2FaN283bnJjdXpkTHhqZnM1R2Z4NzFXSWlqOHlzV1VzOVJuN2MyWWxSMXBteU40R1dRUjRydFk4UTJkRTRENVJ5R2xTVnk1TXYzd3Eycm9sczFtUnpfTVJtcEc3ZE1GTkI3UGNHS1RtdEt6aVExbWNCWGJzeTBuem1QZXZHbjZ5YU85WHJVRHNmWVpKaF9ueGc1dUUxR01xWjJBY3g4T2IxdGwtR3JxMHRoZTJKdUtKUUJQMWg2aWl2QndGSGFpRk5DVnZyUGtQd0RzcG5YbE1GSENQZ21PbXowSUlHc1kyU2tBdmdkME4yY3gtRVJxa1lkWXRjaFMxRC11NXk4OEhQUjQxcE50Vm5xVTdjYmlVWE5XSzMtZEtFUGM0WGtQRXo1WE5IMV9vYkJwRTExTW4yM2tPd0lrRERVemlYRUFXMEllZUV3UUUyTTBIcUlnYXRvUl8wZF9NMVJpdXFIYWpTRGFxWE1wTFpGRGNySURrSVU1TWJmcXQ0bm8zSVlWQnFXbWJuWVVrbVNCTXRBbER4QWU3NlN6MWhOUzl2NDFNX0VSOU5wNzRsSE9CeXpzcmp6MjhkZVZFMENMbEphNHdLdEdFd0tvM0xDX1Y4Q3k5VXRXLWlPcXVjMFpWVkFpSTN3bDhnYklMYXFyMmh4c21hSWhweElFUXVUR2tPTHpXV3NJaGNDMDdJMlpEbDVvTVFqd25FTkJYWjF4WldxMng4eFQ5Z3dmWGp1VGVEcW9nclNSUENvcXRkSExoY0tHdTZNdTdfRDVxTHlRSGNUR085N1VicmpBYUxPcHBJWTk3VXhOdE1uQmJvU2ctMmIwVVE4dzRIZXEtQVlsYzE3YUFGN1NoLUxuWnI1ZmJDZHdWTHRaTXppNFRoUEc3a2FtSENKOFZfelhHVkFOMV9Ia0E9PQ==)
          CM_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmZFV1lQbjVJZDVkMFFySEM1UjVWanJhNkRKdlFybUVjMFN1MXZ0a3I1VG5LRDI0OS1tZmFhcmI4a2Z5bEVyckVSUmpiOC1lYzRUekhJODl4dUttZFpySlRGYlE9PQ==)
          CM_KEY_ALIAS_PASSWORD: Encrypted(Z0FBQUFBQmZFV1lQbjVJZDVkMFFySEM1UjVWanJhNkRKdlFybUVjMFN1MXZ0a3I1VG5LRDI0OS1tZmFhcmI4a2Z5bEVyckVSUmpiOC1lYzRUekhJODl4dUttZFpySlRGYlE9PQ==)
          CM_KEY_ALIAS_USERNAME: Encrypted(Z0FBQUFBQmZFV1llemV5LUdSN2hUMWlteVU2b0tkNndXUG1ObWVXeWtVelVjdnJtUFdRWXljV3B2bU5BMXFTeHpiUEwyWHpnN1pORHNnZ1pWdUs1ZDhLSXE3dUZVejN2RUE9PQ==)
          FIREBASE_TOKEN: Encrypted(Z0FBQUFBQmZFWFB6dkk4MDJGdFM4U2JPbXo2d0VWaEJ5czg2UHY0ZEplN1V1N3RoX2dXNlFGS2dyZDNBS3prV3lOeUNPTmV4UHlCemU0Rmh3ZFhHNzAta3A4LTl3TDZIbjI2V2tVdW9NR2lEaE9namI2dzk3SzZOcG5leXRCZDlRS2xpTDdOc0QxalJWdTdnYjZGQS03NHo5ZVItWDJ1ZTJzSmxJSFI4N2VjTTBWc2ttTjhTeDJ4UHRhOEpJcktfSlFLN2pBd1lWM1c3aTlFQ0R2Q2czREh0ckdTbTVITTRTZz09)
          APP_CENTER_TOKEN: Encrypted(Z0FBQUFBQmZFWGxJQ29NbmFWVnNnZm9kRTlvUEJvc2pyNk5yRnMzWmZDS2dneUlSS3BXRHBwTUlEd05XY3FHRFJnVThFcElVWE5vZk9saEZrc1d3WE10TVhsN0RxVExXeW5TSl84WEM2YkJhUEJGMm5na0tXV292dUx3ZGFMZHRIY3pUWGdKV2pPT0E=)
      cache:
        cache_paths:
          - $HOME/.gradle/caches
      triggering:
        events:
          - push
        branch_patterns:
          - pattern: 'master'
            include: true
            source: true
        cancel_previous_builds: true
      scripts:
        - |
          # set up key.properties
          echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
          cat >> "$FCI_BUILD_DIR/key.properties" <<EOF
          storePassword=$CM_KEYSTORE_PASSWORD
          keyPassword=$CM_KEY_ALIAS_PASSWORD
          keyAlias=$CM_KEY_ALIAS_USERNAME
          storeFile=/tmp/keystore.keystore
          EOF
        - ./gradlew bundleRelease -PversionCode=$BUILD_NUMBER -PversionName=1.0.$BUILD_NUMBER
        # - |
        #   # generate universal apk from generated app bundle
        #   aabPath=$(find app/build -name "*.aab" | head -1)

        #   if [[ -z ${aabPath} ]]
        #   then
        #     echo "No aabs were found, skip universal apk generating"
        #   else
        #     echo "Found aab at $aabPath"
        #     android-app-bundle build-universal-apk \
        #       --bundle ${aabPath} \
        #       --ks /tmp/keystore.keystore \
        #       --ks-pass $CM_KEY_ALIAS_PASSWORD \
        #       --ks-key-alias $CM_KEY_ALIAS_USERNAME \
        #       --key-pass $CM_KEY_ALIAS_PASSWORD
        #   fi
        # - |
        #   # publish the app to Firebase App Distribution
        #   apkPath=$(find app/build -name "*.apk" | head -1)

        #   if [[ -z ${apkPath} ]]
        #   then
        #     echo "No apk were found, skip publishing to Firebase App Distribution"
        #     else
        #       echo "Publishing $apkPath to Firebase App Distribution"
        #       firebase appdistribution:distribute --app "1:717260803432:android:2fa26a4fec7583dd8b5add" --groups "testers" $apkPath
        #     fi
        #   fi
        # - |
        #   # publish the app to Visual Studio App Center
        #   echo 'Installing App Center CLI tools'

        #   npm install -g appcenter-cli

        #   echo "Find build artifacts"
        #   apkPath=$(find app/build -name "*.apk" | head -1)

        #   if [[ -z ${apkPath} ]]
        #   then
        #     echo "No apks were found, skip publishing to App Center"
        #   else
        #     echo "Found apk at $apkPath"
        #     appcenter distribute release \
        #       --group Collaborators \
        #       --file $apkPath \
        #       --release-notes 'App submission via Codemagic' \
        #       --app stasio/android-example-app \
        #       --token $APP_CENTER_TOKEN \
        #       --quiet
        #   fi
      artifacts:
        - app/build/**/outputs/**/*.aab
        - app/build/**/*.apk
      publishing:
        # email:
        #   recipients:
        #     - bondarenko.stanislav.96@gmail.com
        # slack:
        #   channel: '#dev-slack-publishing-test'
        #   notify_on_build_start: true
        google_play:
          credentials: Encrypted(Z0FBQUFBQmZFWmx0RDV0NG1fX0EtUG9oX0hkZWFDU0Q4UkdGVUxZeVhfTFRiMnZ3dGRQUktkVUlxSGcwenBPc2wtSlhjV2lJN0lNQUhSRXJ3OE5OUXFfcDN4ejNVMzRsTlhzclI4eWpLNk1jLVpGNm5uclJlZFVYT3dsZlZUTzVFZFBXcmZreVpoNXFZV2lVVjRteXRhTDVqRU5pZ29idjVrOEgyTWVFR3J1a3R0S3JSb1ltNFFmZ1kyNndmblpwMHJZM2o4cmlPWVh2cXQ1OVRTMjRMSlNyMS00b0RwSzYxRm5pWFlkRXYzUzlrSk40emM5QnNkRkUzdkxVOGtUakhtS0VDMzdUeGVTaU5RUktLYXBoT0dsejhtUWVpdFRVN0xOSXoxMEZvOUZncE52dGpQbkF0REhyc1lPZnlwOFFUV0FTckVldGdhOXIwSlJNQnBlUWtvQS1FS281d2xCOHo4QzMtcFJYa2ljeERIdFc2NnI5Y0NNcDRwR0hDa1ZsaWVpaV9lODI3NE4tMzVfanlxdDJpeVViTkxBWFRoT1BNenlZS3lJcUVaMmltRDI5dldtek1SRGVnYURSd281enVJcEtpUFhjdlNnRnJFaG5yU2phSTJId3hIdDhXVjZRQ19tc1R3cmdueV9uUm5GSnpyNUtRLXlnOHJmNzNlTHFaZExzaFNaS2xadEVkOEhGM1VDWkRWSE1aUVdGS0huZTNaQnZpZHlZRERDWGlZbTItcFpUWHVNbXBYaHhBZUdKal8wa29DQkFYb1lCdkp0cnNSSkszRXBIYXVlZzFXdXhYT0N5QjNGd00xYWpBdXVjRnE4UzZhdnNKWHJJMEVsRFBHZnJiS2JaR1BSNjFsTHFQcG9uNXhSSTQ2TFBHYmc3UmRUSTkyTy15LXM4aDN3WVNYcmFjbXpYS0NjeFVRanVfQ2NvVGtNRmJsTHZCbDlfWi0tdVlUWEdieFdBYzZybTkyRUdWc1VISXZ1eVlfVVVnNlowUXQ3Sk1WVzA1U0FKTGdLZml1MTlqTWpSNnJuZl96Q1kybnp5V3VnVEd2Y1RoZlVHbjgyc2RLUy0ydzdOeEdWRk1pSmZHU05ydXdCRVdBZmVtd0E2emlaRnl2c2xKODFwWkdoNW1BeUpJSTRLMXVURHFnRjluTUdUX0dfZHRFaENmaWR4ZmN1cXlzQ0pKYUEwYmpvTXJKQnBFd1NlUUR5VzJmUFY5NXkyb3ZuMElNemU5VlV3b0JMM3RKZkhpMU8ySm02MHVkeTdCUmV1MjBwNnZReUIyN0NqcHFYTHJldzlhVlJScS03OVZ2RUZTRU84Ylg1a2VJMXdINmhhV0x2QmlrS0JLclJSWFREUUxadFNFWmdUS3hMRnMxWUJiRjJSSElBQ2VtZl9iZW9Ha2lGcnFGX2ZZaDBNbjZFbTQ2OFlYSFozejFONTNtc29CTmdxYlhtRmNiajdKRHMyam9laW9VTHVmaWs2c29TTEh1cGJ4LWZtSlhxWFotQlAxUkR2MFo5MGpXMkpiTGR4bDdnNTg5aVNNUzN0RVZicXZ0OGs4ZXo4aXJRVFZmU21kbE05ZVp2S0JaRl9ScnpKTFlhaU1mTGRSMTRLUzBZVFRXV0NaZGlHUlhQQ0dtM1ZXQkNwbzVYUW1PY0FEZFQyY01qQVdCZTkxTXJjTTQyTXVYbUZ4UlhHc1R6dEZzZUFKT2IzWkVFU2s0YnBVRmlUdTdCcTk5SzFucGF6MDVqWS1tY1ZxRzVfekdJUnhQMUh3MVdscGlyRjVlVWgyeHdlMzlUbVFUZ05MV28weGpLMFNXQnFsQ2F0STVwX2pwVERZOWR6UkJQRzVsSzYyeC0xTzNtUmgwVWpmS190OFpNdzM5NlRhWEt5WUdqZFZFQkUzZzFUZUtHQWM0dURxb0JHaDF0UzVwUklMSURyU0xNMkh0UUpJMU5hbFRqNElMYjFwTWpKUFRMNnByYy1taHRKaWlsYUxNXzczaVd6blgtUGFoeDZic2tGbDFGbzd2cmRrVGh1N0hqUnBpLXJnM3d0ek5vTW9RdDRFQVJJQmVaUXo1LXRkbXJOQlgzeEpjVUxOQVZEdXZCUTkzdUwtaVI2dkZzWXN0VGk1Qkd6TjlsYmNfZkhKRkwxVms5M1ZyQUljVHdjWjFNR2t3Q2YyZ2JfbkRRMzh6WElHbUVacE4tQVoyNzhSOFlCblQxQzFkUmQyS0pvU2FyT3lNQ3V6RnRDT2lncjI1dWVLTkJ3UGI2WnZSUUJKWmZHWVp3LUFSQ2lqeHZWWUQyTWJxVjFVUHBtUG8tNlRGU2xLTEdVOE11VGRHSy0tS0lidzl5OTF2NWR4UHF1WFBwTWJIdFdtRjlHWHJTWXZEdzktTFFBVzhKcVhrY1d5RWdlQ2dPVnM5WHNxSGtVNW9EQTctY3VrOGNsQ1FnUC1HQzBWZ1I5V0pyR0N4WFg3dnE2REJrS19GTDd1VTRRbUZhZUQ5Wi01bURaQUxyV0lma05EZERrNGtzcE9Hd045UlFOdEZoZW8wVDBGTW9VYlJfLWdIN1dCN1FFdGRiR1NNWDBOaENHSmF5cUp4QndicHQ4UTk1Y0hSUU5qNVhsMHFSdWVZMVUyUkV4WWJTT1ZzSmhfWG15MUNvYjNaUW9sOXVONTh6UUNSSk9SMUoyRzlyUVRObkVvU1c4M3JsYk9KbG9UNjJjWmFHY2RPSjA0UnlieEU0b2FtRkhISEFIc2hobGlqRld2ZXhkV3NSTnNib1JRb0V1WTlSdmpad3dHWjctS1BHLUVNbkUxY28xeWJ6ZE1LemxOd0JWbTNELVp4bURvWEYwY3VISkNORWdHUGJEVjdpQjFQMmxNMDZaWUdDNFE0TmwzUkt0dU9SdE1qOG5tb2s3TFFJS2VfT2NfbzZNTHhlSEdtU2xFVkNpdUUtcFdhN0l6aF9aajNOdWtBdERibWVMUzhFZE1nQ1NDaE42aDVEOGZtRXJsakNwTDRFTlhLLVAxdlpKWVQ1aVJESzRSaWNfOFZkSFg2RUdiNXU0eU9zLUdKNDQ0Zy1XcHhoWS1tUFpsSXg2blhUVmxpSnNRellESm53N2pGYjlNTklka3pzajBKVGFPV3RMclVuRmJJYUhZMkhKQmJJN01yRmc2SVpvYlZSQTJzZUhEV1NVenNuZTl1SVQ0V0FrUWVLZFF2QlNxdHotdzFDR3ZFSnVXM1Vnb0ZJT2lQblU4WmtuU2huZk9nc0J6Z3NjQzhCTE9ZekhkLXRFVUVac2sxUjZXcTlzMHFBSmhlWEJCemU5TVlFNkJZV0pDNGFncG1oQzJvSnhncVhqZG5KdlIxWTJSQ2ZhYmhDdWpoNVVtdEl2THdYNm1wM1pVUU5LVE5xaGEwdzJJYW5CRlVpaGlXMEVFVEdkTzBLblRPSDB6di1KZlotNWR3c0poNTE5MWVQNmdCR2c1VkZRTVRSRzJaaW80U3dLVWdhQzAzMUk5X05tbW95eExkNGRzeVlHXzZ6ei1Tb0JxblJfcUtudWViNkxoM3lHd3k0SENneEpZQjIzMG1VUjNZeGxVM3dHTVBmVTlJREpVZHRsWUpaQXhNdTZRa1EwMHVOZUpiQTd3Yk9wemZha0NBTjYzbk9ZWUc3OGlwZlhJRFAyWVNucWRNSXhuX3YyRVBRa2dIalkwWGlpY0o1bG94Z3FlMWtLMk5Ldml2dDAybDNNeUdQR3BWSUI0d3dkclk1cXhnWm5KckpwQkFaWXlNeG5SeXlmaXNmOTFrTzFhT2RUM2p4S3pkRmhrUXpJS2w0S3NWWERDdHBjV24tNEJ2ZlBkV0VjN2FNQ3lyVTBGWXhNQ3JLRlpqVERXXzVXMnhRdUxrSDVOUzh6N3dHSC1SRE11QUxOUVpVdnptU0pmM2hiVGFQTnN0ejZJcmo0TTZoNC1aZUQyVjlkNUFYa0d1bGVuams3U1dQZExkdVBvWXZLQUYzeFFJSnVnLUZzZjl2c1ZBNS0zMUh2aUNpcW03dzRrLVJwTG5idDRrZzRsRnNOWUwxNy10b0ZSOHk1cGVZbTYxTXByNWJ1Z2VmN2pFWXpJQnkzZGpheVkwZ2FxLWtzSG5WbE5qQWtVZ2JNc1doZmdiMXFTNjE3VWpSSjR3bUlMUjIxMy00NlBWcWdKSGxTWndSNlFaSWd0bkJHTlc1TUc2cmh2MEQ3UzRueFdHbkZ3WExOR1dPWmdKTFlsaUlDRDBlVzF1TGVXdEV0ampJRW91YkFfWFVRbjVFdm11UUt4aXR3RmZiT2VUb2RZdU55R2MxVjM3MXpaOWl6cDdaeG1nTXdaSFJmTGRhdHQ5YWJrQ3AwcjlVU3NrUkN1UzdTTXV1TUFyenpIZzJHS3puRGtXbWNic0tkb2NqZ1Y4cmNTTThaMkNwTUJ4R0tiZEpCTkNvTm9JWmI4NnRFQWdZX2pmOU9kSHUyekpFMDlXNDJBSERqNWdSU1RBSEl1NzlkSGpZVlIwSkFENGhoM0ZpNkFtRkpBWF96cVJWMGpXUGF0b0k4U0UtRFhVS09Lajc3WlRuVy1mQ240UktuN194d2YxMERBZXJGelFiZ1piRG1md3V1R29nRUFXb3RrcnBFT21IVklWVF9lV0J3WkFTS2RWQ000NjdLMGRnWGRPSlJGd01zQkN3QkdGSFZLTDNJRnVHaVVaWkhpbnVTOGl3S1pIUjcwREM3ekxVMFdBaHVvd19BZWFvbURmMlF4SU5Ic1ZHRmJrTml2a2tiMEVkX3FCUTJGSV82YnZSQWpiZ2FjVzlkYVM5bXdUR0JNY3pER1JIb2VmZ3p3T1E5NFNIWTZXMlhmcUpRMXBHT3hLeTdjTUVib1c4WkZDLXI4eTBDQTR5NDJVaWxTM0dXeXd1STJuaVA1dWFad0tOcFI5M2xVRWZqdEctUXNQWHFGQ1FtbjBLb3lvWW9SSVlnaU9jR09lLTNyZlNIUTBGb2ZLdUdnYklCMVQ2bDRCeHN0ZTBKZUpMUzJUTTUzOTFEZEpSMUF4OXZpY2wtTkM0TDRpUWRtSjloMUo2aHROUDlveXE1SlhBVm5tWFRGOGd5Ykh1c3ZRVGRrRTJjSld5VzZnVUpBYmZmV0NLT3dKU3BqUXJCNFc0akExMGxHS3I1RkhvYlpCLVhXb2tyNV9PMU1Ba3phUjhiVzYxZTYwVWkxNUVDb1BvMlV3MmhwVHlwdVkySFRYWWJQRTZPeGR2TFk4R0w2NG85UFI5TmFUcDVRSWRjWndlR1FpSjRhcnR3WWhGVDFid3BNYWJOWWpDeEpCbjh5dU8yRVQyRnR0NTZlOVlkLTJpdkdBWm9vZDNpRl9vaGc4alQwTWZNZm1tMmZtUTFjcE5VWG5GNzhBTGI0NFUxQ3NtamFoUGVnNkFzcXgyNjd3Rl8zUHg2ZkNhN0ROSVhGSUpZYWhzSFMxb3NQcUN6RDNodk9YZ3pCNDdQdFNtOGwyTkZBWFRwUGtqbTFOcUFEcml0YVV4d3llXy1wbzM4WFZvY1JJWmFGZ2FYZkc2a01JZUdERjdQZ1ZyeGQxUFNIUmJ1bVAtWDJXTHdtMFlvSTIyNE9veXItLTY3M0g0S3JMZEhkVTRNUGo3MTBCcGpvVkI1UmcwVGg3VXV0Snd0TEhPUkpvT1ZCZ0p0NkxCdkxIeU95RDhEM25oS290UEozYjZyWGJwMEVPV2JhblRtMzRHbk5ub1U2elpEUEY3VjVTYjFPTzRPODlyTw==)
          track: internal
